// –∏–Ω–ø—É—Ç —Ç–∏–ø —Ñ–∞–π–ª (—ç—Ç–æ —Å—Ç–∞—Ä—ã–π –∫–æ–¥ )
// –±–µ–∑ base64
import React, { useRef, useEffect, useState } from "react";
import { useField } from "formik";
import defaultPhoto from "/public/photo.svg"; // –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π

export const InputFile = ({ label, name }) => {
  const [field, , helpers] = useField(name);
  const inputRef = useRef();
  const [imageUrl, setImageUrl] = useState(defaultPhoto); // –ø—É—Ç—å –∫ —Ñ–æ—Ç–æ
  const [fileName, setFileName] = useState("–§–∞–π–ª –Ω–µ –≤–∏–±—Ä–∞–Ω–æ");

  const handleChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      const url = URL.createObjectURL(file);
      helpers.setValue(url); // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ formik
      setImageUrl(url); // —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É
      setFileName(file.name);
    } else {
      helpers.setValue("");
      setImageUrl(defaultPhoto);
      setFileName("–§–∞–π–ª –Ω–µ –≤–∏–±—Ä–∞–Ω–æ");
    }
  };

  useEffect(() => {
    if (field.value) {
      // –µ—Å–ª–∏ —ç—Ç–æ URL, –∞ –Ω–µ File
      setImageUrl(field.value);
      const fileNameFromUrl = field.value.split("/").pop();
      setFileName(fileNameFromUrl);
    } else {
      setImageUrl(defaultPhoto);
      setFileName("–§–∞–π–ª –Ω–µ –≤–∏–±—Ä–∞–Ω–æ");
    }
  }, [field.value]);

  return (
    <div>
      {label && <label className="text-sm block mb-1">{label}</label>}
      <div
        onClick={() => inputRef.current.click()}
        className="relative w-[115px] h-[143px] cursor-pointer shadow-md bg-gray-50 border-2 border-gray-300 text-gray-500 rounded-lg overflow-hidden hover:border-blue-500"
      >
        <img
          src={imageUrl}
          alt="–§–æ—Ç–æ"
          className={`absolute top-1/2 left-1/2 object-cover transform -translate-x-1/2 -translate-y-1/2 ${
            imageUrl === defaultPhoto ? "w-1/2 h-1/2" : "w-full h-full"
          }`}
        />
      </div>

      <input
        ref={inputRef}
        type="file"
        accept="image/*"
        onChange={handleChange}
        className="hidden"
        name={name}
      />
    </div>
  );
};
// –Ω–æ–≤—ã–π –∫–æ–¥ –≥–¥–µ —Ñ–æ—Ç–æ –≥—Ä—É–∑–∏—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ base64
// import React, { useRef, useEffect, useState } from "react";
// import { useField } from "formik";
// import defaultPhoto from "/public/photo.svg"; // –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π

// // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –≤ base64
// const convertToBase64 = (file) => {
//   return new Promise((resolve, reject) => {
//     const reader = new FileReader();
//     reader.readAsDataURL(file);
//     reader.onload = () => resolve(reader.result);
//     reader.onerror = (error) => reject(error);
//   });
// };

// export const InputFile = ({ label, name }) => {
//   const [field, , helpers] = useField(name);
//   const inputRef = useRef();
//   const [imageUrl, setImageUrl] = useState(defaultPhoto); // –ø—É—Ç—å –∫ —Ñ–æ—Ç–æ
//   const [fileName, setFileName] = useState("–§–∞–π–ª –Ω–µ –≤–∏–±—Ä–∞–Ω–æ");

//   const handleChange = async (e) => {
//     const file = e.target.files[0];
//     if (file) {
//       try {
//         const base64 = await convertToBase64(file); // üìå –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ base64
//         helpers.setValue(base64); // –°–æ—Ö—Ä–∞–Ω—è–µ–º base64 –≤ Formik
//         setImageUrl(base64); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
//         setFileName(file.name);
//       } catch (err) {
//         console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ base64:", err);
//       }
//     } else {
//       helpers.setValue("");
//       setImageUrl(defaultPhoto);
//       setFileName("–§–∞–π–ª –Ω–µ –≤–∏–±—Ä–∞–Ω–æ");
//     }
//   };

//   useEffect(() => {
//     if (field.value) {
//       setImageUrl(field.value);
//       const fileNameFromValue = field.value.includes("base64")
//         ? "–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
//         : field.value.split("/").pop();
//       setFileName(fileNameFromValue);
//     } else {
//       setImageUrl(defaultPhoto);
//       setFileName("–§–∞–π–ª –Ω–µ –≤–∏–±—Ä–∞–Ω–æ");
//     }
//   }, [field.value]);

//   return (
//     <div>
//       {label && <label className="text-sm block mb-1">{label}</label>}
//       <div
//         onClick={() => inputRef.current.click()}
//         className="relative w-[115px] h-[143px] cursor-pointer shadow-md bg-gray-50 border-2 border-gray-300 text-gray-500 rounded-lg overflow-hidden hover:border-blue-500"
//       >
//         <img
//           src={imageUrl}
//           alt="–§–æ—Ç–æ"
//           className={`absolute top-1/2 left-1/2 object-cover transform -translate-x-1/2 -translate-y-1/2 ${
//             imageUrl === defaultPhoto ? "w-1/2 h-1/2" : "w-full h-full"
//           }`}
//         />
//       </div>

//       <input
//         ref={inputRef}
//         type="file"
//         accept="image/*"
//         onChange={handleChange}
//         className="hidden"
//         name={name}
//       />
//       <p className="mt-1 text-xs text-gray-500">{fileName}</p>
//     </div>
//   );
// };
